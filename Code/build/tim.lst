ARM GAS  /tmp/ccYe8ook.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM2_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM2_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_TIM2_Init:
  26              	.LFB126:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccYe8ook.s 			page 2


  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** #include "gpio.h"
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE BEGIN 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* USER CODE END 0 */
  48:Src/tim.c     **** 
  49:Src/tim.c     **** TIM_HandleTypeDef htim2;
  50:Src/tim.c     **** TIM_HandleTypeDef htim3;
  51:Src/tim.c     **** TIM_HandleTypeDef htim4;
  52:Src/tim.c     **** TIM_HandleTypeDef htim5;
  53:Src/tim.c     **** 
  54:Src/tim.c     **** /* TIM2 init function */
  55:Src/tim.c     **** void MX_TIM2_Init(void)
  56:Src/tim.c     **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8DB0     		sub	sp, sp, #52
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 56
  57:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
  58:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  59:Src/tim.c     **** 
  60:Src/tim.c     ****   htim2.Instance = TIM2;
  39              		.loc 1 60 0
  40 0004 1748     		ldr	r0, .L7
  41 0006 4FF08043 		mov	r3, #1073741824
  42 000a 0360     		str	r3, [r0]
  61:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  43              		.loc 1 61 0
  44 000c 0023     		movs	r3, #0
  45 000e 4360     		str	r3, [r0, #4]
  62:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  46              		.loc 1 62 0
  47 0010 8360     		str	r3, [r0, #8]
  63:Src/tim.c     ****   htim2.Init.Period = 0xFFFFFFFF;
  48              		.loc 1 63 0
  49 0012 4FF0FF32 		mov	r2, #-1
  50 0016 C260     		str	r2, [r0, #12]
  64:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51              		.loc 1 64 0
ARM GAS  /tmp/ccYe8ook.s 			page 3


  52 0018 0361     		str	r3, [r0, #16]
  65:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
  53              		.loc 1 65 0
  54 001a 0322     		movs	r2, #3
  55 001c 0392     		str	r2, [sp, #12]
  66:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
  56              		.loc 1 66 0
  57 001e 0493     		str	r3, [sp, #16]
  67:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
  58              		.loc 1 67 0
  59 0020 0122     		movs	r2, #1
  60 0022 0592     		str	r2, [sp, #20]
  68:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
  61              		.loc 1 68 0
  62 0024 0693     		str	r3, [sp, #24]
  69:Src/tim.c     ****   sConfig.IC1Filter = 0;
  63              		.loc 1 69 0
  64 0026 0793     		str	r3, [sp, #28]
  70:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
  65              		.loc 1 70 0
  66 0028 0893     		str	r3, [sp, #32]
  71:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
  67              		.loc 1 71 0
  68 002a 0992     		str	r2, [sp, #36]
  72:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
  69              		.loc 1 72 0
  70 002c 0A93     		str	r3, [sp, #40]
  73:Src/tim.c     ****   sConfig.IC2Filter = 0;
  71              		.loc 1 73 0
  72 002e 0B93     		str	r3, [sp, #44]
  74:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
  73              		.loc 1 74 0
  74 0030 03A9     		add	r1, sp, #12
  75 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
  76              	.LVL0:
  77 0036 50B9     		cbnz	r0, .L5
  78              	.L2:
  75:Src/tim.c     ****   {
  76:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  77:Src/tim.c     ****   }
  78:Src/tim.c     **** 
  79:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  79              		.loc 1 79 0
  80 0038 0023     		movs	r3, #0
  81 003a 0193     		str	r3, [sp, #4]
  80:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  82              		.loc 1 80 0
  83 003c 0293     		str	r3, [sp, #8]
  81:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  84              		.loc 1 81 0
  85 003e 01A9     		add	r1, sp, #4
  86 0040 0848     		ldr	r0, .L7
  87 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  88              	.LVL1:
  89 0046 38B9     		cbnz	r0, .L6
  90              	.L1:
  82:Src/tim.c     ****   {
ARM GAS  /tmp/ccYe8ook.s 			page 4


  83:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  84:Src/tim.c     ****   }
  85:Src/tim.c     **** 
  86:Src/tim.c     **** }
  91              		.loc 1 86 0
  92 0048 0DB0     		add	sp, sp, #52
  93              	.LCFI2:
  94              		.cfi_remember_state
  95              		.cfi_def_cfa_offset 4
  96              		@ sp needed
  97 004a 5DF804FB 		ldr	pc, [sp], #4
  98              	.L5:
  99              	.LCFI3:
 100              		.cfi_restore_state
  76:Src/tim.c     ****   }
 101              		.loc 1 76 0
 102 004e 4C21     		movs	r1, #76
 103 0050 0548     		ldr	r0, .L7+4
 104 0052 FFF7FEFF 		bl	_Error_Handler
 105              	.LVL2:
 106 0056 EFE7     		b	.L2
 107              	.L6:
  83:Src/tim.c     ****   }
 108              		.loc 1 83 0
 109 0058 5321     		movs	r1, #83
 110 005a 0348     		ldr	r0, .L7+4
 111 005c FFF7FEFF 		bl	_Error_Handler
 112              	.LVL3:
 113              		.loc 1 86 0
 114 0060 F2E7     		b	.L1
 115              	.L8:
 116 0062 00BF     		.align	2
 117              	.L7:
 118 0064 00000000 		.word	htim2
 119 0068 00000000 		.word	.LC0
 120              		.cfi_endproc
 121              	.LFE126:
 123              		.section	.text.MX_TIM5_Init,"ax",%progbits
 124              		.align	1
 125              		.global	MX_TIM5_Init
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	MX_TIM5_Init:
 132              	.LFB129:
  87:Src/tim.c     **** /* TIM3 init function */
  88:Src/tim.c     **** void MX_TIM3_Init(void)
  89:Src/tim.c     **** {
  90:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  91:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  92:Src/tim.c     **** 
  93:Src/tim.c     ****   htim3.Instance = TIM3;
  94:Src/tim.c     ****   htim3.Init.Prescaler = 0;
  95:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  96:Src/tim.c     ****   htim3.Init.Period = 0;
  97:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccYe8ook.s 			page 5


  98:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
  99:Src/tim.c     ****   {
 100:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 101:Src/tim.c     ****   }
 102:Src/tim.c     **** 
 103:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 104:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 105:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 111:Src/tim.c     ****   sConfigOC.Pulse = 0;
 112:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 113:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 114:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 115:Src/tim.c     ****   {
 116:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 117:Src/tim.c     ****   }
 118:Src/tim.c     **** 
 119:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 120:Src/tim.c     ****   {
 121:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 122:Src/tim.c     ****   }
 123:Src/tim.c     **** 
 124:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 125:Src/tim.c     **** 
 126:Src/tim.c     **** }
 127:Src/tim.c     **** /* TIM4 init function */
 128:Src/tim.c     **** void MX_TIM4_Init(void)
 129:Src/tim.c     **** {
 130:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 131:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 132:Src/tim.c     **** 
 133:Src/tim.c     ****   htim4.Instance = TIM4;
 134:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 135:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 136:Src/tim.c     ****   htim4.Init.Period = 0;
 137:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 138:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 139:Src/tim.c     ****   {
 140:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 141:Src/tim.c     ****   }
 142:Src/tim.c     **** 
 143:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 144:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 145:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 146:Src/tim.c     ****   {
 147:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 148:Src/tim.c     ****   }
 149:Src/tim.c     **** 
 150:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 151:Src/tim.c     ****   sConfigOC.Pulse = 0;
 152:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 153:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 154:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /tmp/ccYe8ook.s 			page 6


 155:Src/tim.c     ****   {
 156:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/tim.c     ****   }
 158:Src/tim.c     **** 
 159:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 160:Src/tim.c     ****   {
 161:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 162:Src/tim.c     ****   }
 163:Src/tim.c     **** 
 164:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim4);
 165:Src/tim.c     **** 
 166:Src/tim.c     **** }
 167:Src/tim.c     **** /* TIM5 init function */
 168:Src/tim.c     **** void MX_TIM5_Init(void)
 169:Src/tim.c     **** {
 133              		.loc 1 169 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 48
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 00B5     		push	{lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 8DB0     		sub	sp, sp, #52
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 56
 170:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 171:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 172:Src/tim.c     **** 
 173:Src/tim.c     ****   htim5.Instance = TIM5;
 144              		.loc 1 173 0
 145 0004 1648     		ldr	r0, .L15
 146 0006 174B     		ldr	r3, .L15+4
 147 0008 0360     		str	r3, [r0]
 174:Src/tim.c     ****   htim5.Init.Prescaler = 0;
 148              		.loc 1 174 0
 149 000a 0023     		movs	r3, #0
 150 000c 4360     		str	r3, [r0, #4]
 175:Src/tim.c     ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 151              		.loc 1 175 0
 152 000e 8360     		str	r3, [r0, #8]
 176:Src/tim.c     ****   htim5.Init.Period = 0xFFFFFFFF;
 153              		.loc 1 176 0
 154 0010 4FF0FF32 		mov	r2, #-1
 155 0014 C260     		str	r2, [r0, #12]
 177:Src/tim.c     ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 156              		.loc 1 177 0
 157 0016 0361     		str	r3, [r0, #16]
 178:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 158              		.loc 1 178 0
 159 0018 0322     		movs	r2, #3
 160 001a 0392     		str	r2, [sp, #12]
 179:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 161              		.loc 1 179 0
 162 001c 0493     		str	r3, [sp, #16]
 180:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 163              		.loc 1 180 0
ARM GAS  /tmp/ccYe8ook.s 			page 7


 164 001e 0122     		movs	r2, #1
 165 0020 0592     		str	r2, [sp, #20]
 181:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 166              		.loc 1 181 0
 167 0022 0693     		str	r3, [sp, #24]
 182:Src/tim.c     ****   sConfig.IC1Filter = 0;
 168              		.loc 1 182 0
 169 0024 0793     		str	r3, [sp, #28]
 183:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 170              		.loc 1 183 0
 171 0026 0893     		str	r3, [sp, #32]
 184:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 172              		.loc 1 184 0
 173 0028 0992     		str	r2, [sp, #36]
 185:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 174              		.loc 1 185 0
 175 002a 0A93     		str	r3, [sp, #40]
 186:Src/tim.c     ****   sConfig.IC2Filter = 0;
 176              		.loc 1 186 0
 177 002c 0B93     		str	r3, [sp, #44]
 187:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 178              		.loc 1 187 0
 179 002e 03A9     		add	r1, sp, #12
 180 0030 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 181              	.LVL4:
 182 0034 50B9     		cbnz	r0, .L13
 183              	.L10:
 188:Src/tim.c     ****   {
 189:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 190:Src/tim.c     ****   }
 191:Src/tim.c     **** 
 192:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 184              		.loc 1 192 0
 185 0036 0023     		movs	r3, #0
 186 0038 0193     		str	r3, [sp, #4]
 193:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 187              		.loc 1 193 0
 188 003a 0293     		str	r3, [sp, #8]
 194:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 189              		.loc 1 194 0
 190 003c 01A9     		add	r1, sp, #4
 191 003e 0848     		ldr	r0, .L15
 192 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 193              	.LVL5:
 194 0044 38B9     		cbnz	r0, .L14
 195              	.L9:
 195:Src/tim.c     ****   {
 196:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 197:Src/tim.c     ****   }
 198:Src/tim.c     **** 
 199:Src/tim.c     **** }
 196              		.loc 1 199 0
 197 0046 0DB0     		add	sp, sp, #52
 198              	.LCFI6:
 199              		.cfi_remember_state
 200              		.cfi_def_cfa_offset 4
 201              		@ sp needed
ARM GAS  /tmp/ccYe8ook.s 			page 8


 202 0048 5DF804FB 		ldr	pc, [sp], #4
 203              	.L13:
 204              	.LCFI7:
 205              		.cfi_restore_state
 189:Src/tim.c     ****   }
 206              		.loc 1 189 0
 207 004c BD21     		movs	r1, #189
 208 004e 0648     		ldr	r0, .L15+8
 209 0050 FFF7FEFF 		bl	_Error_Handler
 210              	.LVL6:
 211 0054 EFE7     		b	.L10
 212              	.L14:
 196:Src/tim.c     ****   }
 213              		.loc 1 196 0
 214 0056 C421     		movs	r1, #196
 215 0058 0348     		ldr	r0, .L15+8
 216 005a FFF7FEFF 		bl	_Error_Handler
 217              	.LVL7:
 218              		.loc 1 199 0
 219 005e F2E7     		b	.L9
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 0060 00000000 		.word	htim5
 224 0064 000C0040 		.word	1073744896
 225 0068 00000000 		.word	.LC0
 226              		.cfi_endproc
 227              	.LFE129:
 229              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 230              		.align	1
 231              		.global	HAL_TIM_Encoder_MspInit
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	HAL_TIM_Encoder_MspInit:
 238              	.LFB130:
 200:Src/tim.c     **** 
 201:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 202:Src/tim.c     **** {
 239              		.loc 1 202 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 32
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL8:
 244 0000 70B5     		push	{r4, r5, r6, lr}
 245              	.LCFI8:
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 4, -16
 248              		.cfi_offset 5, -12
 249              		.cfi_offset 6, -8
 250              		.cfi_offset 14, -4
 251 0002 88B0     		sub	sp, sp, #32
 252              	.LCFI9:
 253              		.cfi_def_cfa_offset 48
 203:Src/tim.c     **** 
 204:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
ARM GAS  /tmp/ccYe8ook.s 			page 9


 205:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM2)
 254              		.loc 1 205 0
 255 0004 0368     		ldr	r3, [r0]
 256 0006 B3F1804F 		cmp	r3, #1073741824
 257 000a 04D0     		beq	.L21
 206:Src/tim.c     ****   {
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 210:Src/tim.c     ****     /* TIM2 clock enable */
 211:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 212:Src/tim.c     ****   
 213:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 214:Src/tim.c     ****     PA15     ------> TIM2_CH1
 215:Src/tim.c     ****     PB3     ------> TIM2_CH2 
 216:Src/tim.c     ****     */
 217:Src/tim.c     ****     GPIO_InitStruct.Pin = L_Encoder_A_Pin;
 218:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 219:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 220:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 221:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 222:Src/tim.c     ****     HAL_GPIO_Init(L_Encoder_A_GPIO_Port, &GPIO_InitStruct);
 223:Src/tim.c     **** 
 224:Src/tim.c     ****     GPIO_InitStruct.Pin = L_Encoder_B_Pin;
 225:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 226:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 227:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 228:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 229:Src/tim.c     ****     HAL_GPIO_Init(L_Encoder_B_GPIO_Port, &GPIO_InitStruct);
 230:Src/tim.c     **** 
 231:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 232:Src/tim.c     **** 
 233:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 234:Src/tim.c     ****   }
 235:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM5)
 258              		.loc 1 235 0
 259 000c 214A     		ldr	r2, .L23
 260 000e 9342     		cmp	r3, r2
 261 0010 26D0     		beq	.L22
 262              	.LVL9:
 263              	.L17:
 236:Src/tim.c     ****   {
 237:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 0 */
 240:Src/tim.c     ****     /* TIM5 clock enable */
 241:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_ENABLE();
 242:Src/tim.c     ****   
 243:Src/tim.c     ****     /**TIM5 GPIO Configuration    
 244:Src/tim.c     ****     PA0-WKUP     ------> TIM5_CH1
 245:Src/tim.c     ****     PA1     ------> TIM5_CH2 
 246:Src/tim.c     ****     */
 247:Src/tim.c     ****     GPIO_InitStruct.Pin = R_Encoder_A_Pin|R_Encoder_B_Pin;
 248:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 250:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 251:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
ARM GAS  /tmp/ccYe8ook.s 			page 10


 252:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253:Src/tim.c     **** 
 254:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 255:Src/tim.c     **** 
 256:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 1 */
 257:Src/tim.c     ****   }
 258:Src/tim.c     **** }
 264              		.loc 1 258 0
 265 0012 08B0     		add	sp, sp, #32
 266              	.LCFI10:
 267              		.cfi_remember_state
 268              		.cfi_def_cfa_offset 16
 269              		@ sp needed
 270 0014 70BD     		pop	{r4, r5, r6, pc}
 271              	.LVL10:
 272              	.L21:
 273              	.LCFI11:
 274              		.cfi_restore_state
 275              	.LBB2:
 211:Src/tim.c     ****   
 276              		.loc 1 211 0
 277 0016 0025     		movs	r5, #0
 278 0018 0195     		str	r5, [sp, #4]
 279 001a 03F50E33 		add	r3, r3, #145408
 280 001e 1A6C     		ldr	r2, [r3, #64]
 281 0020 42F00102 		orr	r2, r2, #1
 282 0024 1A64     		str	r2, [r3, #64]
 283 0026 1B6C     		ldr	r3, [r3, #64]
 284 0028 03F00103 		and	r3, r3, #1
 285 002c 0193     		str	r3, [sp, #4]
 286 002e 019B     		ldr	r3, [sp, #4]
 287              	.LBE2:
 217:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 288              		.loc 1 217 0
 289 0030 4FF40043 		mov	r3, #32768
 290 0034 0393     		str	r3, [sp, #12]
 218:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 291              		.loc 1 218 0
 292 0036 0226     		movs	r6, #2
 293 0038 0496     		str	r6, [sp, #16]
 219:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 294              		.loc 1 219 0
 295 003a 0124     		movs	r4, #1
 296 003c 0594     		str	r4, [sp, #20]
 220:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 297              		.loc 1 220 0
 298 003e 0695     		str	r5, [sp, #24]
 221:Src/tim.c     ****     HAL_GPIO_Init(L_Encoder_A_GPIO_Port, &GPIO_InitStruct);
 299              		.loc 1 221 0
 300 0040 0794     		str	r4, [sp, #28]
 222:Src/tim.c     **** 
 301              		.loc 1 222 0
 302 0042 03A9     		add	r1, sp, #12
 303 0044 1448     		ldr	r0, .L23+4
 304              	.LVL11:
 305 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 306              	.LVL12:
ARM GAS  /tmp/ccYe8ook.s 			page 11


 224:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 307              		.loc 1 224 0
 308 004a 0823     		movs	r3, #8
 309 004c 0393     		str	r3, [sp, #12]
 225:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 310              		.loc 1 225 0
 311 004e 0496     		str	r6, [sp, #16]
 226:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 226 0
 313 0050 0594     		str	r4, [sp, #20]
 227:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 314              		.loc 1 227 0
 315 0052 0695     		str	r5, [sp, #24]
 228:Src/tim.c     ****     HAL_GPIO_Init(L_Encoder_B_GPIO_Port, &GPIO_InitStruct);
 316              		.loc 1 228 0
 317 0054 0794     		str	r4, [sp, #28]
 229:Src/tim.c     **** 
 318              		.loc 1 229 0
 319 0056 03A9     		add	r1, sp, #12
 320 0058 1048     		ldr	r0, .L23+8
 321 005a FFF7FEFF 		bl	HAL_GPIO_Init
 322              	.LVL13:
 323 005e D8E7     		b	.L17
 324              	.LVL14:
 325              	.L22:
 326              	.LBB3:
 241:Src/tim.c     ****   
 327              		.loc 1 241 0
 328 0060 0021     		movs	r1, #0
 329 0062 0291     		str	r1, [sp, #8]
 330 0064 0E4B     		ldr	r3, .L23+12
 331 0066 1A6C     		ldr	r2, [r3, #64]
 332 0068 42F00802 		orr	r2, r2, #8
 333 006c 1A64     		str	r2, [r3, #64]
 334 006e 1B6C     		ldr	r3, [r3, #64]
 335 0070 03F00803 		and	r3, r3, #8
 336 0074 0293     		str	r3, [sp, #8]
 337 0076 029B     		ldr	r3, [sp, #8]
 338              	.LBE3:
 247:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 339              		.loc 1 247 0
 340 0078 0323     		movs	r3, #3
 341 007a 0393     		str	r3, [sp, #12]
 248:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 342              		.loc 1 248 0
 343 007c 0223     		movs	r3, #2
 344 007e 0493     		str	r3, [sp, #16]
 249:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 345              		.loc 1 249 0
 346 0080 0122     		movs	r2, #1
 347 0082 0592     		str	r2, [sp, #20]
 250:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 348              		.loc 1 250 0
 349 0084 0691     		str	r1, [sp, #24]
 251:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 350              		.loc 1 251 0
 351 0086 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccYe8ook.s 			page 12


 252:Src/tim.c     **** 
 352              		.loc 1 252 0
 353 0088 03A9     		add	r1, sp, #12
 354 008a 0348     		ldr	r0, .L23+4
 355              	.LVL15:
 356 008c FFF7FEFF 		bl	HAL_GPIO_Init
 357              	.LVL16:
 358              		.loc 1 258 0
 359 0090 BFE7     		b	.L17
 360              	.L24:
 361 0092 00BF     		.align	2
 362              	.L23:
 363 0094 000C0040 		.word	1073744896
 364 0098 00000240 		.word	1073872896
 365 009c 00040240 		.word	1073873920
 366 00a0 00380240 		.word	1073887232
 367              		.cfi_endproc
 368              	.LFE130:
 370              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 371              		.align	1
 372              		.global	HAL_TIM_PWM_MspInit
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	HAL_TIM_PWM_MspInit:
 379              	.LFB131:
 259:Src/tim.c     **** 
 260:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 261:Src/tim.c     **** {
 380              		.loc 1 261 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL17:
 386 0000 82B0     		sub	sp, sp, #8
 387              	.LCFI12:
 388              		.cfi_def_cfa_offset 8
 262:Src/tim.c     **** 
 263:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 389              		.loc 1 263 0
 390 0002 0368     		ldr	r3, [r0]
 391 0004 104A     		ldr	r2, .L31
 392 0006 9342     		cmp	r3, r2
 393 0008 04D0     		beq	.L29
 264:Src/tim.c     ****   {
 265:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 266:Src/tim.c     **** 
 267:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 268:Src/tim.c     ****     /* TIM3 clock enable */
 269:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 270:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 271:Src/tim.c     **** 
 272:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 273:Src/tim.c     ****   }
 274:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM4)
ARM GAS  /tmp/ccYe8ook.s 			page 13


 394              		.loc 1 274 0
 395 000a 104A     		ldr	r2, .L31+4
 396 000c 9342     		cmp	r3, r2
 397 000e 0ED0     		beq	.L30
 398              	.L25:
 275:Src/tim.c     ****   {
 276:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 277:Src/tim.c     **** 
 278:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 279:Src/tim.c     ****     /* TIM4 clock enable */
 280:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 281:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 282:Src/tim.c     **** 
 283:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 284:Src/tim.c     ****   }
 285:Src/tim.c     **** }
 399              		.loc 1 285 0
 400 0010 02B0     		add	sp, sp, #8
 401              	.LCFI13:
 402              		.cfi_remember_state
 403              		.cfi_def_cfa_offset 0
 404              		@ sp needed
 405 0012 7047     		bx	lr
 406              	.L29:
 407              	.LCFI14:
 408              		.cfi_restore_state
 409              	.LBB4:
 269:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 410              		.loc 1 269 0
 411 0014 0023     		movs	r3, #0
 412 0016 0093     		str	r3, [sp]
 413 0018 0D4B     		ldr	r3, .L31+8
 414 001a 1A6C     		ldr	r2, [r3, #64]
 415 001c 42F00202 		orr	r2, r2, #2
 416 0020 1A64     		str	r2, [r3, #64]
 417 0022 1B6C     		ldr	r3, [r3, #64]
 418 0024 03F00203 		and	r3, r3, #2
 419 0028 0093     		str	r3, [sp]
 420 002a 009B     		ldr	r3, [sp]
 421              	.LBE4:
 422 002c F0E7     		b	.L25
 423              	.L30:
 424              	.LBB5:
 280:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 425              		.loc 1 280 0
 426 002e 0023     		movs	r3, #0
 427 0030 0193     		str	r3, [sp, #4]
 428 0032 074B     		ldr	r3, .L31+8
 429 0034 1A6C     		ldr	r2, [r3, #64]
 430 0036 42F00402 		orr	r2, r2, #4
 431 003a 1A64     		str	r2, [r3, #64]
 432 003c 1B6C     		ldr	r3, [r3, #64]
 433 003e 03F00403 		and	r3, r3, #4
 434 0042 0193     		str	r3, [sp, #4]
 435 0044 019B     		ldr	r3, [sp, #4]
 436              	.LBE5:
 437              		.loc 1 285 0
ARM GAS  /tmp/ccYe8ook.s 			page 14


 438 0046 E3E7     		b	.L25
 439              	.L32:
 440              		.align	2
 441              	.L31:
 442 0048 00040040 		.word	1073742848
 443 004c 00080040 		.word	1073743872
 444 0050 00380240 		.word	1073887232
 445              		.cfi_endproc
 446              	.LFE131:
 448              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 449              		.align	1
 450              		.global	HAL_TIM_MspPostInit
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv4-sp-d16
 456              	HAL_TIM_MspPostInit:
 457              	.LFB132:
 286:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 287:Src/tim.c     **** {
 458              		.loc 1 287 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 24
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL18:
 463 0000 00B5     		push	{lr}
 464              	.LCFI15:
 465              		.cfi_def_cfa_offset 4
 466              		.cfi_offset 14, -4
 467 0002 87B0     		sub	sp, sp, #28
 468              	.LCFI16:
 469              		.cfi_def_cfa_offset 32
 288:Src/tim.c     **** 
 289:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 290:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 470              		.loc 1 290 0
 471 0004 0368     		ldr	r3, [r0]
 472 0006 114A     		ldr	r2, .L39
 473 0008 9342     		cmp	r3, r2
 474 000a 05D0     		beq	.L37
 291:Src/tim.c     ****   {
 292:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 293:Src/tim.c     **** 
 294:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 295:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 296:Src/tim.c     ****     PB4     ------> TIM3_CH1
 297:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 298:Src/tim.c     ****     */
 299:Src/tim.c     ****     GPIO_InitStruct.Pin = Motor_L_F_Pin|Motor_L_B_Pin;
 300:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 301:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 302:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 303:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 304:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 305:Src/tim.c     **** 
 306:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 307:Src/tim.c     **** 
ARM GAS  /tmp/ccYe8ook.s 			page 15


 308:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 309:Src/tim.c     ****   }
 310:Src/tim.c     ****   else if(timHandle->Instance==TIM4)
 475              		.loc 1 310 0
 476 000c 104A     		ldr	r2, .L39+4
 477 000e 9342     		cmp	r3, r2
 478 0010 0FD0     		beq	.L38
 479              	.LVL19:
 480              	.L33:
 311:Src/tim.c     ****   {
 312:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspPostInit 0 */
 313:Src/tim.c     **** 
 314:Src/tim.c     ****   /* USER CODE END TIM4_MspPostInit 0 */
 315:Src/tim.c     ****   
 316:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 317:Src/tim.c     ****     PB6     ------> TIM4_CH1
 318:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 319:Src/tim.c     ****     */
 320:Src/tim.c     ****     GPIO_InitStruct.Pin = Motor_R_B_Pin|Motor_R_F_Pin;
 321:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 322:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 323:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 324:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 325:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 326:Src/tim.c     **** 
 327:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspPostInit 1 */
 328:Src/tim.c     **** 
 329:Src/tim.c     ****   /* USER CODE END TIM4_MspPostInit 1 */
 330:Src/tim.c     ****   }
 331:Src/tim.c     **** 
 332:Src/tim.c     **** }
 481              		.loc 1 332 0
 482 0012 07B0     		add	sp, sp, #28
 483              	.LCFI17:
 484              		.cfi_remember_state
 485              		.cfi_def_cfa_offset 4
 486              		@ sp needed
 487 0014 5DF804FB 		ldr	pc, [sp], #4
 488              	.LVL20:
 489              	.L37:
 490              	.LCFI18:
 491              		.cfi_restore_state
 299:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 492              		.loc 1 299 0
 493 0018 3023     		movs	r3, #48
 494 001a 0193     		str	r3, [sp, #4]
 300:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 495              		.loc 1 300 0
 496 001c 0223     		movs	r3, #2
 497 001e 0293     		str	r3, [sp, #8]
 301:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 498              		.loc 1 301 0
 499 0020 0022     		movs	r2, #0
 500 0022 0392     		str	r2, [sp, #12]
 302:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 501              		.loc 1 302 0
 502 0024 0492     		str	r2, [sp, #16]
ARM GAS  /tmp/ccYe8ook.s 			page 16


 303:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 503              		.loc 1 303 0
 504 0026 0593     		str	r3, [sp, #20]
 304:Src/tim.c     **** 
 505              		.loc 1 304 0
 506 0028 01A9     		add	r1, sp, #4
 507 002a 0A48     		ldr	r0, .L39+8
 508              	.LVL21:
 509 002c FFF7FEFF 		bl	HAL_GPIO_Init
 510              	.LVL22:
 511 0030 EFE7     		b	.L33
 512              	.LVL23:
 513              	.L38:
 320:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 514              		.loc 1 320 0
 515 0032 C023     		movs	r3, #192
 516 0034 0193     		str	r3, [sp, #4]
 321:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 517              		.loc 1 321 0
 518 0036 0223     		movs	r3, #2
 519 0038 0293     		str	r3, [sp, #8]
 322:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 520              		.loc 1 322 0
 521 003a 0022     		movs	r2, #0
 522 003c 0392     		str	r2, [sp, #12]
 323:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 523              		.loc 1 323 0
 524 003e 0492     		str	r2, [sp, #16]
 324:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 525              		.loc 1 324 0
 526 0040 0593     		str	r3, [sp, #20]
 325:Src/tim.c     **** 
 527              		.loc 1 325 0
 528 0042 01A9     		add	r1, sp, #4
 529 0044 0348     		ldr	r0, .L39+8
 530              	.LVL24:
 531 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 532              	.LVL25:
 533              		.loc 1 332 0
 534 004a E2E7     		b	.L33
 535              	.L40:
 536              		.align	2
 537              	.L39:
 538 004c 00040040 		.word	1073742848
 539 0050 00080040 		.word	1073743872
 540 0054 00040240 		.word	1073873920
 541              		.cfi_endproc
 542              	.LFE132:
 544              		.section	.text.MX_TIM3_Init,"ax",%progbits
 545              		.align	1
 546              		.global	MX_TIM3_Init
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	MX_TIM3_Init:
 553              	.LFB127:
ARM GAS  /tmp/ccYe8ook.s 			page 17


  89:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 554              		.loc 1 89 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 40
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 00B5     		push	{lr}
 559              	.LCFI19:
 560              		.cfi_def_cfa_offset 4
 561              		.cfi_offset 14, -4
 562 0002 8BB0     		sub	sp, sp, #44
 563              	.LCFI20:
 564              		.cfi_def_cfa_offset 48
  93:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 565              		.loc 1 93 0
 566 0004 1F48     		ldr	r0, .L51
 567 0006 204B     		ldr	r3, .L51+4
 568 0008 0360     		str	r3, [r0]
  94:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 569              		.loc 1 94 0
 570 000a 0023     		movs	r3, #0
 571 000c 4360     		str	r3, [r0, #4]
  95:Src/tim.c     ****   htim3.Init.Period = 0;
 572              		.loc 1 95 0
 573 000e 8360     		str	r3, [r0, #8]
  96:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 574              		.loc 1 96 0
 575 0010 C360     		str	r3, [r0, #12]
  97:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 576              		.loc 1 97 0
 577 0012 0361     		str	r3, [r0, #16]
  98:Src/tim.c     ****   {
 578              		.loc 1 98 0
 579 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 580              	.LVL26:
 581 0018 F8B9     		cbnz	r0, .L47
 582              	.L42:
 103:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 583              		.loc 1 103 0
 584 001a 0023     		movs	r3, #0
 585 001c 0893     		str	r3, [sp, #32]
 104:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 586              		.loc 1 104 0
 587 001e 0993     		str	r3, [sp, #36]
 105:Src/tim.c     ****   {
 588              		.loc 1 105 0
 589 0020 08A9     		add	r1, sp, #32
 590 0022 1848     		ldr	r0, .L51
 591 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 592              	.LVL27:
 593 0028 E0B9     		cbnz	r0, .L48
 594              	.L43:
 110:Src/tim.c     ****   sConfigOC.Pulse = 0;
 595              		.loc 1 110 0
 596 002a 6023     		movs	r3, #96
 597 002c 0193     		str	r3, [sp, #4]
 111:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 598              		.loc 1 111 0
ARM GAS  /tmp/ccYe8ook.s 			page 18


 599 002e 0022     		movs	r2, #0
 600 0030 0292     		str	r2, [sp, #8]
 112:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 601              		.loc 1 112 0
 602 0032 0392     		str	r2, [sp, #12]
 113:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 603              		.loc 1 113 0
 604 0034 0592     		str	r2, [sp, #20]
 114:Src/tim.c     ****   {
 605              		.loc 1 114 0
 606 0036 01A9     		add	r1, sp, #4
 607 0038 1248     		ldr	r0, .L51
 608 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 609              	.LVL28:
 610 003e B0B9     		cbnz	r0, .L49
 611              	.L44:
 119:Src/tim.c     ****   {
 612              		.loc 1 119 0
 613 0040 0422     		movs	r2, #4
 614 0042 0DEB0201 		add	r1, sp, r2
 615 0046 0F48     		ldr	r0, .L51
 616 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 617              	.LVL29:
 618 004c A0B9     		cbnz	r0, .L50
 619              	.L45:
 124:Src/tim.c     **** 
 620              		.loc 1 124 0
 621 004e 0D48     		ldr	r0, .L51
 622 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 623              	.LVL30:
 126:Src/tim.c     **** /* TIM4 init function */
 624              		.loc 1 126 0
 625 0054 0BB0     		add	sp, sp, #44
 626              	.LCFI21:
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 4
 629              		@ sp needed
 630 0056 5DF804FB 		ldr	pc, [sp], #4
 631              	.L47:
 632              	.LCFI22:
 633              		.cfi_restore_state
 100:Src/tim.c     ****   }
 634              		.loc 1 100 0
 635 005a 6421     		movs	r1, #100
 636 005c 0B48     		ldr	r0, .L51+8
 637 005e FFF7FEFF 		bl	_Error_Handler
 638              	.LVL31:
 639 0062 DAE7     		b	.L42
 640              	.L48:
 107:Src/tim.c     ****   }
 641              		.loc 1 107 0
 642 0064 6B21     		movs	r1, #107
 643 0066 0948     		ldr	r0, .L51+8
 644 0068 FFF7FEFF 		bl	_Error_Handler
 645              	.LVL32:
 646 006c DDE7     		b	.L43
 647              	.L49:
ARM GAS  /tmp/ccYe8ook.s 			page 19


 116:Src/tim.c     ****   }
 648              		.loc 1 116 0
 649 006e 7421     		movs	r1, #116
 650 0070 0648     		ldr	r0, .L51+8
 651 0072 FFF7FEFF 		bl	_Error_Handler
 652              	.LVL33:
 653 0076 E3E7     		b	.L44
 654              	.L50:
 121:Src/tim.c     ****   }
 655              		.loc 1 121 0
 656 0078 7921     		movs	r1, #121
 657 007a 0448     		ldr	r0, .L51+8
 658 007c FFF7FEFF 		bl	_Error_Handler
 659              	.LVL34:
 660 0080 E5E7     		b	.L45
 661              	.L52:
 662 0082 00BF     		.align	2
 663              	.L51:
 664 0084 00000000 		.word	htim3
 665 0088 00040040 		.word	1073742848
 666 008c 00000000 		.word	.LC0
 667              		.cfi_endproc
 668              	.LFE127:
 670              		.section	.text.MX_TIM4_Init,"ax",%progbits
 671              		.align	1
 672              		.global	MX_TIM4_Init
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu fpv4-sp-d16
 678              	MX_TIM4_Init:
 679              	.LFB128:
 129:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 680              		.loc 1 129 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 40
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684 0000 00B5     		push	{lr}
 685              	.LCFI23:
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 14, -4
 688 0002 8BB0     		sub	sp, sp, #44
 689              	.LCFI24:
 690              		.cfi_def_cfa_offset 48
 133:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 691              		.loc 1 133 0
 692 0004 1F48     		ldr	r0, .L63
 693 0006 204B     		ldr	r3, .L63+4
 694 0008 0360     		str	r3, [r0]
 134:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 695              		.loc 1 134 0
 696 000a 0023     		movs	r3, #0
 697 000c 4360     		str	r3, [r0, #4]
 135:Src/tim.c     ****   htim4.Init.Period = 0;
 698              		.loc 1 135 0
 699 000e 8360     		str	r3, [r0, #8]
 136:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccYe8ook.s 			page 20


 700              		.loc 1 136 0
 701 0010 C360     		str	r3, [r0, #12]
 137:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 702              		.loc 1 137 0
 703 0012 0361     		str	r3, [r0, #16]
 138:Src/tim.c     ****   {
 704              		.loc 1 138 0
 705 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 706              	.LVL35:
 707 0018 F8B9     		cbnz	r0, .L59
 708              	.L54:
 143:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 709              		.loc 1 143 0
 710 001a 0023     		movs	r3, #0
 711 001c 0893     		str	r3, [sp, #32]
 144:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 712              		.loc 1 144 0
 713 001e 0993     		str	r3, [sp, #36]
 145:Src/tim.c     ****   {
 714              		.loc 1 145 0
 715 0020 08A9     		add	r1, sp, #32
 716 0022 1848     		ldr	r0, .L63
 717 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 718              	.LVL36:
 719 0028 E0B9     		cbnz	r0, .L60
 720              	.L55:
 150:Src/tim.c     ****   sConfigOC.Pulse = 0;
 721              		.loc 1 150 0
 722 002a 6023     		movs	r3, #96
 723 002c 0193     		str	r3, [sp, #4]
 151:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 724              		.loc 1 151 0
 725 002e 0022     		movs	r2, #0
 726 0030 0292     		str	r2, [sp, #8]
 152:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 727              		.loc 1 152 0
 728 0032 0392     		str	r2, [sp, #12]
 153:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 729              		.loc 1 153 0
 730 0034 0592     		str	r2, [sp, #20]
 154:Src/tim.c     ****   {
 731              		.loc 1 154 0
 732 0036 01A9     		add	r1, sp, #4
 733 0038 1248     		ldr	r0, .L63
 734 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 735              	.LVL37:
 736 003e B0B9     		cbnz	r0, .L61
 737              	.L56:
 159:Src/tim.c     ****   {
 738              		.loc 1 159 0
 739 0040 0422     		movs	r2, #4
 740 0042 0DEB0201 		add	r1, sp, r2
 741 0046 0F48     		ldr	r0, .L63
 742 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 743              	.LVL38:
 744 004c A0B9     		cbnz	r0, .L62
 745              	.L57:
ARM GAS  /tmp/ccYe8ook.s 			page 21


 164:Src/tim.c     **** 
 746              		.loc 1 164 0
 747 004e 0D48     		ldr	r0, .L63
 748 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 749              	.LVL39:
 166:Src/tim.c     **** /* TIM5 init function */
 750              		.loc 1 166 0
 751 0054 0BB0     		add	sp, sp, #44
 752              	.LCFI25:
 753              		.cfi_remember_state
 754              		.cfi_def_cfa_offset 4
 755              		@ sp needed
 756 0056 5DF804FB 		ldr	pc, [sp], #4
 757              	.L59:
 758              	.LCFI26:
 759              		.cfi_restore_state
 140:Src/tim.c     ****   }
 760              		.loc 1 140 0
 761 005a 8C21     		movs	r1, #140
 762 005c 0B48     		ldr	r0, .L63+8
 763 005e FFF7FEFF 		bl	_Error_Handler
 764              	.LVL40:
 765 0062 DAE7     		b	.L54
 766              	.L60:
 147:Src/tim.c     ****   }
 767              		.loc 1 147 0
 768 0064 9321     		movs	r1, #147
 769 0066 0948     		ldr	r0, .L63+8
 770 0068 FFF7FEFF 		bl	_Error_Handler
 771              	.LVL41:
 772 006c DDE7     		b	.L55
 773              	.L61:
 156:Src/tim.c     ****   }
 774              		.loc 1 156 0
 775 006e 9C21     		movs	r1, #156
 776 0070 0648     		ldr	r0, .L63+8
 777 0072 FFF7FEFF 		bl	_Error_Handler
 778              	.LVL42:
 779 0076 E3E7     		b	.L56
 780              	.L62:
 161:Src/tim.c     ****   }
 781              		.loc 1 161 0
 782 0078 A121     		movs	r1, #161
 783 007a 0448     		ldr	r0, .L63+8
 784 007c FFF7FEFF 		bl	_Error_Handler
 785              	.LVL43:
 786 0080 E5E7     		b	.L57
 787              	.L64:
 788 0082 00BF     		.align	2
 789              	.L63:
 790 0084 00000000 		.word	htim4
 791 0088 00080040 		.word	1073743872
 792 008c 00000000 		.word	.LC0
 793              		.cfi_endproc
 794              	.LFE128:
 796              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 797              		.align	1
ARM GAS  /tmp/ccYe8ook.s 			page 22


 798              		.global	HAL_TIM_Encoder_MspDeInit
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	HAL_TIM_Encoder_MspDeInit:
 805              	.LFB133:
 333:Src/tim.c     **** 
 334:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 335:Src/tim.c     **** {
 806              		.loc 1 335 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              	.LVL44:
 811 0000 08B5     		push	{r3, lr}
 812              	.LCFI27:
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 3, -8
 815              		.cfi_offset 14, -4
 336:Src/tim.c     **** 
 337:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM2)
 816              		.loc 1 337 0
 817 0002 0368     		ldr	r3, [r0]
 818 0004 B3F1804F 		cmp	r3, #1073741824
 819 0008 03D0     		beq	.L69
 338:Src/tim.c     ****   {
 339:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 340:Src/tim.c     **** 
 341:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 342:Src/tim.c     ****     /* Peripheral clock disable */
 343:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 344:Src/tim.c     ****   
 345:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 346:Src/tim.c     ****     PA15     ------> TIM2_CH1
 347:Src/tim.c     ****     PB3     ------> TIM2_CH2 
 348:Src/tim.c     ****     */
 349:Src/tim.c     ****     HAL_GPIO_DeInit(L_Encoder_A_GPIO_Port, L_Encoder_A_Pin);
 350:Src/tim.c     **** 
 351:Src/tim.c     ****     HAL_GPIO_DeInit(L_Encoder_B_GPIO_Port, L_Encoder_B_Pin);
 352:Src/tim.c     **** 
 353:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 354:Src/tim.c     **** 
 355:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 356:Src/tim.c     ****   }
 357:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM5)
 820              		.loc 1 357 0
 821 000a 0F4A     		ldr	r2, .L71
 822 000c 9342     		cmp	r3, r2
 823 000e 0FD0     		beq	.L70
 824              	.LVL45:
 825              	.L65:
 358:Src/tim.c     ****   {
 359:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 0 */
 360:Src/tim.c     **** 
 361:Src/tim.c     ****   /* USER CODE END TIM5_MspDeInit 0 */
 362:Src/tim.c     ****     /* Peripheral clock disable */
ARM GAS  /tmp/ccYe8ook.s 			page 23


 363:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_DISABLE();
 364:Src/tim.c     ****   
 365:Src/tim.c     ****     /**TIM5 GPIO Configuration    
 366:Src/tim.c     ****     PA0-WKUP     ------> TIM5_CH1
 367:Src/tim.c     ****     PA1     ------> TIM5_CH2 
 368:Src/tim.c     ****     */
 369:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOA, R_Encoder_A_Pin|R_Encoder_B_Pin);
 370:Src/tim.c     **** 
 371:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 1 */
 372:Src/tim.c     **** 
 373:Src/tim.c     ****   /* USER CODE END TIM5_MspDeInit 1 */
 374:Src/tim.c     ****   }
 375:Src/tim.c     **** }
 826              		.loc 1 375 0
 827 0010 08BD     		pop	{r3, pc}
 828              	.LVL46:
 829              	.L69:
 343:Src/tim.c     ****   
 830              		.loc 1 343 0
 831 0012 0E4A     		ldr	r2, .L71+4
 832 0014 136C     		ldr	r3, [r2, #64]
 833 0016 23F00103 		bic	r3, r3, #1
 834 001a 1364     		str	r3, [r2, #64]
 349:Src/tim.c     **** 
 835              		.loc 1 349 0
 836 001c 4FF40041 		mov	r1, #32768
 837 0020 0B48     		ldr	r0, .L71+8
 838              	.LVL47:
 839 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 840              	.LVL48:
 351:Src/tim.c     **** 
 841              		.loc 1 351 0
 842 0026 0821     		movs	r1, #8
 843 0028 0A48     		ldr	r0, .L71+12
 844 002a FFF7FEFF 		bl	HAL_GPIO_DeInit
 845              	.LVL49:
 846 002e EFE7     		b	.L65
 847              	.LVL50:
 848              	.L70:
 363:Src/tim.c     ****   
 849              		.loc 1 363 0
 850 0030 02F50B32 		add	r2, r2, #142336
 851 0034 136C     		ldr	r3, [r2, #64]
 852 0036 23F00803 		bic	r3, r3, #8
 853 003a 1364     		str	r3, [r2, #64]
 369:Src/tim.c     **** 
 854              		.loc 1 369 0
 855 003c 0321     		movs	r1, #3
 856 003e 0448     		ldr	r0, .L71+8
 857              	.LVL51:
 858 0040 FFF7FEFF 		bl	HAL_GPIO_DeInit
 859              	.LVL52:
 860              		.loc 1 375 0
 861 0044 E4E7     		b	.L65
 862              	.L72:
 863 0046 00BF     		.align	2
 864              	.L71:
ARM GAS  /tmp/ccYe8ook.s 			page 24


 865 0048 000C0040 		.word	1073744896
 866 004c 00380240 		.word	1073887232
 867 0050 00000240 		.word	1073872896
 868 0054 00040240 		.word	1073873920
 869              		.cfi_endproc
 870              	.LFE133:
 872              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 873              		.align	1
 874              		.global	HAL_TIM_PWM_MspDeInit
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu fpv4-sp-d16
 880              	HAL_TIM_PWM_MspDeInit:
 881              	.LFB134:
 376:Src/tim.c     **** 
 377:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 378:Src/tim.c     **** {
 882              		.loc 1 378 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887              	.LVL53:
 379:Src/tim.c     **** 
 380:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 888              		.loc 1 380 0
 889 0000 0368     		ldr	r3, [r0]
 890 0002 0A4A     		ldr	r2, .L78
 891 0004 9342     		cmp	r3, r2
 892 0006 03D0     		beq	.L76
 381:Src/tim.c     ****   {
 382:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 383:Src/tim.c     **** 
 384:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 385:Src/tim.c     ****     /* Peripheral clock disable */
 386:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 387:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 388:Src/tim.c     **** 
 389:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 390:Src/tim.c     ****   }
 391:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM4)
 893              		.loc 1 391 0
 894 0008 094A     		ldr	r2, .L78+4
 895 000a 9342     		cmp	r3, r2
 896 000c 07D0     		beq	.L77
 897              	.L73:
 392:Src/tim.c     ****   {
 393:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 394:Src/tim.c     **** 
 395:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 396:Src/tim.c     ****     /* Peripheral clock disable */
 397:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 398:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 399:Src/tim.c     **** 
 400:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 401:Src/tim.c     ****   }
ARM GAS  /tmp/ccYe8ook.s 			page 25


 402:Src/tim.c     **** } 
 898              		.loc 1 402 0
 899 000e 7047     		bx	lr
 900              	.L76:
 386:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 901              		.loc 1 386 0
 902 0010 02F50D32 		add	r2, r2, #144384
 903 0014 136C     		ldr	r3, [r2, #64]
 904 0016 23F00203 		bic	r3, r3, #2
 905 001a 1364     		str	r3, [r2, #64]
 906 001c 7047     		bx	lr
 907              	.L77:
 397:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 908              		.loc 1 397 0
 909 001e 02F50C32 		add	r2, r2, #143360
 910 0022 136C     		ldr	r3, [r2, #64]
 911 0024 23F00403 		bic	r3, r3, #4
 912 0028 1364     		str	r3, [r2, #64]
 913              		.loc 1 402 0
 914 002a F0E7     		b	.L73
 915              	.L79:
 916              		.align	2
 917              	.L78:
 918 002c 00040040 		.word	1073742848
 919 0030 00080040 		.word	1073743872
 920              		.cfi_endproc
 921              	.LFE134:
 923              		.comm	htim5,60,4
 924              		.comm	htim4,60,4
 925              		.comm	htim3,60,4
 926              		.comm	htim2,60,4
 927              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 928              		.align	2
 929              	.LC0:
 930 0000 5372632F 		.ascii	"Src/tim.c\000"
 930      74696D2E 
 930      6300
 931              		.text
 932              	.Letext0:
 933              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 934              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 935              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 936              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 937              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 938              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 939              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 940              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 941              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 942              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 943              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 944              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 945              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 946              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 947              		.file 16 "Inc/tim.h"
ARM GAS  /tmp/ccYe8ook.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccYe8ook.s:18     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccYe8ook.s:25     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccYe8ook.s:118    .text.MX_TIM2_Init:0000000000000064 $d
                            *COM*:000000000000003c htim2
     /tmp/ccYe8ook.s:124    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccYe8ook.s:131    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccYe8ook.s:223    .text.MX_TIM5_Init:0000000000000060 $d
                            *COM*:000000000000003c htim5
     /tmp/ccYe8ook.s:230    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccYe8ook.s:237    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccYe8ook.s:363    .text.HAL_TIM_Encoder_MspInit:0000000000000094 $d
     /tmp/ccYe8ook.s:371    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccYe8ook.s:378    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccYe8ook.s:442    .text.HAL_TIM_PWM_MspInit:0000000000000048 $d
     /tmp/ccYe8ook.s:449    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccYe8ook.s:456    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccYe8ook.s:538    .text.HAL_TIM_MspPostInit:000000000000004c $d
     /tmp/ccYe8ook.s:545    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccYe8ook.s:552    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccYe8ook.s:664    .text.MX_TIM3_Init:0000000000000084 $d
                            *COM*:000000000000003c htim3
     /tmp/ccYe8ook.s:671    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccYe8ook.s:678    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccYe8ook.s:790    .text.MX_TIM4_Init:0000000000000084 $d
                            *COM*:000000000000003c htim4
     /tmp/ccYe8ook.s:797    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccYe8ook.s:804    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccYe8ook.s:865    .text.HAL_TIM_Encoder_MspDeInit:0000000000000048 $d
     /tmp/ccYe8ook.s:873    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccYe8ook.s:880    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccYe8ook.s:918    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
     /tmp/ccYe8ook.s:928    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
_Error_Handler
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_GPIO_DeInit
